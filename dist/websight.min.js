"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),degToRad=function(x){return x*Math.PI/180};window.addEventListener("load",function(){var renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0});renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(renderer.domElement),renderer.domElement.style.backgroundColor="black";var effect=new THREE.VREffect(renderer);effect.separation=0,effect.setSize(window.innerWidth,window.innerHeight);var vrDisplay=void 0;navigator.getVRDisplays&&navigator.getVRDisplays().then(function(displays){return displays.length&&(vrDisplay=displays[0])}),enterVRButton.addEventListener("click",function(){var controls=document.getElementById("controls");enterVRButton.classList.contains("small")?(closeVR(),enterVRButton.classList.remove("small"),controls.classList.remove("hidden")):(navigator.userAgent.includes("Mobile VR")?vrDisplay.requestPresent([{source:renderer.domElement}]):((effect=new THREE.StereoEffect(renderer)).separation=0,effect.setSize(window.innerWidth,window.innerHeight)),enterVRButton.classList.add("small"),controls.classList.add("hidden"))});var closeVR=function(){(effect=new THREE.VREffect(renderer)).separation=0,effect.setSize(window.innerWidth,window.innerHeight)},scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(70,window.innerWidth/window.innerHeight,1,1e3);scene.add(camera);var texture=void 0,boxMaterial=void 0,box=void 0,makeBoxObject=function(){window.video=document.createElement("video"),video.autoplay=!0,video.width=window.innerWidth/2,video.height=window.innerHeight/2,getVideoFeed();var boxWidth=video.width,boxHeight=video.height,boxGeometry=new THREE.BoxGeometry(boxWidth,boxHeight,1);(texture=new THREE.Texture(video)).minFilter=THREE.NearestFilter,boxMaterial=new THREE.ShaderMaterial({uniforms:{texture:{type:"t",value:texture},width:{type:"f",value:video.width},height:{type:"f",value:video.height},radius:{type:"f",value:.4},intensity:{type:"f",value:1},edgeR:{type:"f",value:1},edgeG:{type:"f",value:1},edgeB:{type:"f",value:1},surfaceR:{type:"f",value:0},surfaceG:{type:"f",value:0},surfaceB:{type:"f",value:0}},vertexShader:vertexShaderSource.text,fragmentShader:Filters.compileShader("sobel3x3")}),box=new THREE.Mesh(boxGeometry,boxMaterial),scene.add(box),camera.position.z=.5*boxWidth*Math.atan(degToRad(55))+100},getVideoFeedAttempts=0,getVideoFeed=function getVideoFeed(){try{if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia)navigator.mediaDevices.getUserMedia({video:{facingMode:"environment"}}).then(function(stream){video.src=window.URL.createObjectURL(stream)}).catch(function(err){console.log(err),++getVideoFeedAttempts<3?getVideoFeed():alert("There was an error accessing the camera. Please try again and ensure you are using https")});else{var getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;getUserMedia?getUserMedia({video:{facingMode:"environment"}},function(stream){video.src=window.URL.createObjectURL(stream)},function(err){console.log(err),alert("There was an error accessing the camera. Please try again and ensure you are using https.")}):alert("Camera not available")}}catch(e){alert("Error getting camera feed. Please ensure you are using https.")}};makeBoxObject();!function render(){requestAnimationFrame(render),video.currentTime&&(texture.needsUpdate=!0),effect.render(scene,camera)}(),window.location.href.includes("localhost")||renderer.domElement.addEventListener("click",function(){document.fullscreenEnabled&&renderer.domElement.requestFullScreen()||document.webkitFullscreenEnabled&&renderer.domElement.webkitRequestFullScreen()||document.mozFullScreenEnabled&&renderer.domElement.mozRequestFullScreen()||document.msFullScreenEnabled&&renderer.domElement.msRequestFullScreen()}),window.addEventListener("resize",function(){effect.setSize(window.innerWidth,window.innerHeight),camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),scene.remove(box),video.pause(),makeBoxObject(),setShader(document.querySelector(".filter-button:disabled").dataset.filter),setIntensity((parseFloat(document.getElementById("intensitySlider").value)||.01)/100),setRadius(parseFloat(document.getElementById("radiusSlider").value)/100)}),window.setShader=function(shader){Filters.shader=shader,boxMaterial.fragmentShader=Filters.compileShader(shader),boxMaterial.needsUpdate=!0},window.setRadius=function(val){boxMaterial.uniforms.radius.value=val},window.setIntensity=function(val){boxMaterial.uniforms.intensity.value=1-val},window.toggleInverted=function(){Filters.isInverted=!Filters.isInverted,boxMaterial.fragmentShader=Filters.compileShader(Filters.shader),boxMaterial.needsUpdate=!0},window.setEdgeColour=function(_ref){var _ref$r=_ref.r,r=void 0===_ref$r?0:_ref$r,_ref$g=_ref.g,g=void 0===_ref$g?0:_ref$g,_ref$b=_ref.b,b=void 0===_ref$b?0:_ref$b;boxMaterial.uniforms.edgeR.value=r/255,boxMaterial.uniforms.edgeG.value=g/255,boxMaterial.uniforms.edgeB.value=b/255};var surfaceCache={};window.setSurfaceColour=function(_ref2){var _ref2$r=_ref2.r,r=void 0===_ref2$r?0:_ref2$r,_ref2$g=_ref2.g,g=void 0===_ref2$g?0:_ref2$g,_ref2$b=_ref2.b,b=void 0===_ref2$b?0:_ref2$b;boxMaterial.uniforms.surfaceR.value=surfaceCache.r=r/255,boxMaterial.uniforms.surfaceG.value=surfaceCache.g=g/255,boxMaterial.uniforms.surfaceB.value=surfaceCache.b=b/255},window.toggleReducedColours=function(){Filters.hasReducedColours=!Filters.hasReducedColours,boxMaterial.fragmentShader=Filters.compileShader(Filters.shader),boxMaterial.needsUpdate=!0},window.toggleBackground=function(isBackground){Filters.hasBackground=!!isBackground,Filters.hasBackground?(boxMaterial.uniforms.surfaceR.value=0,boxMaterial.uniforms.surfaceG.value=0,boxMaterial.uniforms.surfaceB.value=0):(boxMaterial.uniforms.surfaceR.value=surfaceCache.r,boxMaterial.uniforms.surfaceG.value=surfaceCache.g,boxMaterial.uniforms.surfaceB.value=surfaceCache.b),boxMaterial.fragmentShader=Filters.compileShader(Filters.shader),boxMaterial.needsUpdate=!0}});var Filters=function(){function Filters(){_classCallCheck(this,Filters)}return _createClass(Filters,null,[{key:"compileShader",value:function(name){return"\n            uniform sampler2D texture;\n            uniform float width;\n            uniform float height;\n            uniform float radius;\n            uniform float intensity;\n            uniform vec2 resolution;\n            varying vec2 vUv;\n\n            uniform float edgeR;\n            uniform float edgeG;\n            uniform float edgeB;\n\n            uniform float surfaceR;\n            uniform float surfaceG;\n            uniform float surfaceB;\n\n            void main() {\n\n                float w = 1.0 / width;\n                float h = 1.0 / height;\n\n                vec4 pixel = texture2D(texture, vUv);\n\n                if (sqrt( (0.5 - vUv[0])*(0.5 - vUv[0]) + (0.5 - vUv[1])*(0.5 - vUv[1]) ) < radius) {\n\n                    "+this[name+"Body"]+"\n\n                    gl_FragColor = newColour*(1.0-intensity) + pixel*intensity;\n\n                    "+(this.hasBackground?this.addBackground:"")+"\n\n                    "+(this.hasReducedColours?this.reducedColoursBody:"")+"\n\n                    "+(this.isInverted?this.invertedBody:"")+"\n\n                } else {\n                    gl_FragColor = vec4(pixel.rgb, 1.0);\n                }\n\n            }\n        "}},{key:"availableFilters",get:function(){return["No effect","Sobel 3x3","Sobel 5x5","Frei-Chen"]}},{key:"noeffectBody",get:function(){return"vec4 newColour = vec4(pixel.rgb, 1.0);"}},{key:"invertedBody",get:function(){return"\n            gl_FragColor.rgb = 1.0 - gl_FragColor.rgb;\n        "}},{key:"reducedColoursBody",get:function(){return"\n            gl_FragColor.r = float(floor(gl_FragColor.r * 5.0 ) / 5.0);\n            gl_FragColor.g = float(floor(gl_FragColor.g * 5.0 ) / 5.0);\n            gl_FragColor.b = float(floor(gl_FragColor.b * 5.0 ) / 5.0);\n        "}},{key:"addBackground",get:function(){return"\n            gl_FragColor.r += pixel.r * 0.9;\n            gl_FragColor.g += pixel.g * 0.9;\n            gl_FragColor.b += pixel.b * 0.9;\n        "}},{key:"sobel3x3Body",get:function(){return"\n            vec4 n[9];\n\n            for (int i=-1; i<=1; i++) {\n                for (int j=-1; j<=1; j++) {\n                    n[(j+1)+(i+1)*3] = texture2D(texture, vUv + vec2(float(j)*w, float(i)*h) );\n                }\n            }\n\n            vec4 sobel_x = n[2] + (2.0*n[5]) + n[8] - (n[0] + (2.0*n[3]) + n[6]);\n            vec4 sobel_y = n[0] + (2.0*n[1]) + n[2] - (n[6] + (2.0*n[7]) + n[8]);\n\n            float avg_x = (sobel_x.r + sobel_x.g + sobel_x.b) / 3.0;\n            float avg_y = (sobel_y.r + sobel_y.g + sobel_y.b) / 3.0;\n\n            sobel_x.r = avg_x;\n            sobel_x.g = avg_x;\n            sobel_x.b = avg_x;\n            sobel_y.r = avg_y;\n            sobel_y.g = avg_y;\n            sobel_y.b = avg_y;\n\n            vec3 sobel = vec3(sqrt((sobel_x.rgb * sobel_x.rgb) + (sobel_y.rgb * sobel_y.rgb)));\n            sobel.r = surfaceR * (1.0 - sobel.r) + sobel.r * edgeR;\n            sobel.g = surfaceG * (1.0 - sobel.g) + sobel.g * edgeG;\n            sobel.b = surfaceB * (1.0 - sobel.b) + sobel.b * edgeB;\n\n            vec4 newColour = vec4( sobel, 1.0 );\n        "}},{key:"sobel5x5Body",get:function(){return"\n            vec4 n[25];\n\n            for (int i=-2; i<=2; i++) {\n                for (int j=-2; j<=2; j++) {\n                    n[(j+2)+(i+2)*5] = texture2D(texture, vUv + vec2(float(j)*w, float(i)*h) );\n                }\n            }\n\n            vec4 sobel_x = 2.0*n[4] + 3.0*n[9] + 4.0*n[14] + 3.0*n[19] + 2.0*n[24] +\n                           n[3] + 2.0*n[8] + 3.0*n[13] + 2.0*n[18] + n[23] -\n                           (2.0*n[0] + 3.0*n[5] + 4.0*n[10] + 3.0*n[15] + 2.0*n[20] +\n                           n[1] + 2.0*n[6] + 3.0*n[11] + 2.0*n[16] + n[21]);\n\n            vec4 sobel_y = 2.0*n[0] + n[1] + n[3] + n[4] +\n                           3.0*n[5] + 2.0*n[6] + 2.0*n[8] + 3.0*n[9] -\n                           (3.0*n[15] + 2.0*n[16] + 2.0*n[18] + 3.0*n[19] +\n                            2.0*n[20] + n[21] + n[23] + n[24]);\n\n            float avg_x = (sobel_x.r + sobel_x.g + sobel_x.b) / 3.0 / 9.0;\n            float avg_y = (sobel_y.r + sobel_y.g + sobel_y.b) / 3.0 / 9.0;\n\n            sobel_x.r = avg_x;\n            sobel_x.g = avg_x;\n            sobel_x.b = avg_x;\n            sobel_y.r = avg_y;\n            sobel_y.g = avg_y;\n            sobel_y.b = avg_y;\n\n            vec3 sobel = vec3(sqrt((sobel_x.rgb * sobel_x.rgb) + (sobel_y.rgb * sobel_y.rgb)));\n            sobel.r = surfaceR * (1.0 - sobel.r) + sobel.r * edgeR;\n            sobel.g = surfaceG * (1.0 - sobel.g) + sobel.g * edgeG;\n            sobel.b = surfaceB * (1.0 - sobel.b) + sobel.b * edgeB;\n\n            vec4 newColour = vec4(sobel, 1.0 );\n        "}},{key:"freichenBody",get:function(){return"\n\n            vec2 texel = vec2(1.0 / width, 1.0 / height);\n            mat3 I;\n            mat3 G[9];\n            float cnv[9];\n\n            G[0] = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\n            G[1] = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\n            G[2] = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\n            G[3] = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\n            G[4] = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\n            G[5] = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\n            G[6] = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\n            G[7] = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\n            G[8] = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\n\n            // Get intensity\n            I[0][0] = length(texture2D(texture, vUv + texel * vec2(-1.0,-1.0) ).rgb);\n            I[0][1] = length(texture2D(texture, vUv + texel * vec2(-1.0,0.0) ).rgb);\n            I[0][2] = length(texture2D(texture, vUv + texel * vec2(-1.0,1.0) ).rgb);\n            I[1][0] = length(texture2D(texture, vUv + texel * vec2(0.0,-1.0) ).rgb);\n            I[1][1] = length(texture2D(texture, vUv + texel * vec2(0.0,0.0) ).rgb);\n            I[1][2] = length(texture2D(texture, vUv + texel * vec2(0.0,1.0) ).rgb);\n            I[2][0] = length(texture2D(texture, vUv + texel * vec2(1.0,-1.0) ).rgb);\n            I[2][1] = length(texture2D(texture, vUv + texel * vec2(1.0,0.0) ).rgb);\n            I[2][2] = length(texture2D(texture, vUv + texel * vec2(1.0,1.0) ).rgb);\n\n            // Convolve\n            cnv[0] = pow(dot(G[0][0], I[0]) + dot(G[0][1], I[1]) + dot(G[0][2], I[2]) , 2.0);\n            cnv[1] = pow(dot(G[1][0], I[0]) + dot(G[1][1], I[1]) + dot(G[1][2], I[2]) , 2.0);\n            cnv[2] = pow(dot(G[2][0], I[0]) + dot(G[2][1], I[1]) + dot(G[2][2], I[2]) , 2.0);\n            cnv[3] = pow(dot(G[3][0], I[0]) + dot(G[3][1], I[1]) + dot(G[3][2], I[2]) , 2.0);\n            cnv[4] = pow(dot(G[4][0], I[0]) + dot(G[4][1], I[1]) + dot(G[4][2], I[2]) , 2.0);\n            cnv[5] = pow(dot(G[5][0], I[0]) + dot(G[5][1], I[1]) + dot(G[5][2], I[2]) , 2.0);\n            cnv[6] = pow(dot(G[6][0], I[0]) + dot(G[6][1], I[1]) + dot(G[6][2], I[2]) , 2.0);\n            cnv[7] = pow(dot(G[7][0], I[0]) + dot(G[7][1], I[1]) + dot(G[7][2], I[2]) , 2.0);\n            cnv[8] = pow(dot(G[8][0], I[0]) + dot(G[8][1], I[1]) + dot(G[8][2], I[2]) , 2.0);\n\n            float M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\n            float S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\n\n            vec3 freiChen = vec3(sqrt(M/S)) * 2.0;\n            freiChen.r = surfaceR * (1.0 - freiChen.r) + freiChen.r * edgeR;\n            freiChen.g = surfaceG * (1.0 - freiChen.g) + freiChen.g * edgeG;\n            freiChen.b = surfaceB * (1.0 - freiChen.b) + freiChen.b * edgeB;\n\n            vec4 newColour = vec4(freiChen, 1.0 );\n        "}}]),Filters}();window.addEventListener("load",function(){var filters=Filters.availableFilters,initialFilter=window.localStorage.getItem("filter")||"sobel3x3";window.setShader(initialFilter);var controlsRoot=document.getElementById("controls"),filtersRoot=controlsRoot.getElementsByClassName("filters")[0],slidersRoot=controlsRoot.getElementsByClassName("sliders")[0],filterButtons=filters.map(function(filter){var button=document.createElement("button");return button.dataset.filter=filter.toLowerCase().replace(/\s|\-/g,""),button.innerText=filter,button.classList.add("filter-button"),button.dataset.filter===initialFilter&&(button.disabled=!0),filtersRoot.appendChild(button),button},[]),radiusSlider=document.createElement("input");radiusSlider.id="radiusSlider",radiusSlider.type="range",radiusSlider.name="radius",radiusSlider.value=parseInt(window.localStorage.getItem("radius"))||50,radiusSlider.min=0,radiusSlider.max=100,radiusSlider.step=1;var radiusLabel=document.createElement("label");radiusLabel.for="radius",radiusLabel.innerText="Radius: ";var radiusValue=document.createElement("span");radiusValue.innerText="50%",radiusLabel.appendChild(radiusSlider),radiusLabel.appendChild(radiusValue),slidersRoot.appendChild(radiusLabel);var intensitySlider=document.createElement("input");intensitySlider.id="intensitySlider",intensitySlider.type="range",intensitySlider.name="intensity",intensitySlider.value=parseInt(window.localStorage.getItem("intensity"))||100,intensitySlider.min=0,intensitySlider.max=100,intensitySlider.step=1;var intensityLabel=document.createElement("label");intensityLabel.for="intensity",intensityLabel.innerText="Intensity: ";var intensityValue=document.createElement("span");intensityValue.innerText="100%",intensityLabel.appendChild(intensitySlider),intensityLabel.appendChild(intensityValue),slidersRoot.appendChild(intensityLabel),document.addEventListener("click",function(_ref3){var target=_ref3.target;target.dataset.filter&&(window.setShader(target.dataset.filter),filterButtons.forEach(function(button){return button.disabled=!1}),target.disabled=!0,window.localStorage.setItem("filter",target.dataset.filter))});var updateRadius=function(_ref4){var target=_ref4.target;window.setRadius(target.value/100),radiusValue.innerText=target.value+"%",window.localStorage.setItem("radius",target.value)};updateRadius({target:radiusSlider}),radiusSlider.addEventListener("change",updateRadius),radiusSlider.addEventListener("mousemove",updateRadius);var updateIntensity=function(_ref5){var target=_ref5.target;window.setIntensity("0"===target.value?.01:target.value/100),intensityValue.innerText=target.value+"%",window.localStorage.setItem("intensity",target.value)};updateIntensity({target:intensitySlider}),intensitySlider.addEventListener("mousemove",updateIntensity),intensitySlider.addEventListener("change",updateIntensity),document.querySelector("#controls .toggle").addEventListener("click",function(){return controlsRoot.classList.toggle("open")}),invertedCheckbox.addEventListener("click",function(){return toggleInverted()}),reducedColoursCheckbox.addEventListener("click",function(){return toggleReducedColours()}),backgroundCheckbox.addEventListener("click",function(){return toggleBackground(!Filters.hasBackground)}),setBlueEdgesButton.addEventListener("click",function(){setEdgeColour({r:0,g:0,b:255})}),setGreenEdgesButton.addEventListener("click",function(){setEdgeColour({r:0,g:255,b:0})}),setRedBackgroundButton.addEventListener("click",function(){setSurfaceColour({r:255,g:0,b:0}),toggleBackground()}),setYellowBackgroundButton.addEventListener("click",function(){setSurfaceColour({r:255,g:255,b:0}),toggleBackground()})});
//# sourceMappingURL=websight.min.js.map