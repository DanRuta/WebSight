"use strict";const degToRad=x=>x*Math.PI/180;window.addEventListener("load",()=>{window.sobel=new Sobel,sobel.record(),sobel.video.onplaying=(()=>{sobel.setSize();const boxWidth=sobel.width,boxHeight=sobel.height,renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0});renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(renderer.domElement);let effect=new THREE.VREffect(renderer);effect.separation=0,effect.setSize(window.innerWidth,window.innerHeight);let vrDisplay;navigator.getVRDisplays().then(displays=>displays.length&&(vrDisplay=displays[0]));VRSamplesUtil.addButton("Enter VR","E","/images/cardboard64.png",()=>{navigator.userAgent.includes("Mobile VR")?vrDisplay.requestPresent([{source:renderer.domElement}]):((effect=new THREE.StereoEffect(renderer)).separation=0,effect.setSize(window.innerWidth,window.innerHeight),document.getElementById("vr-sample-button-container").style.display="none")});const scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(70,window.innerWidth/window.innerHeight,1,1e3);camera.position.z=.5*boxWidth*Math.atan(degToRad(55))+100,scene.add(camera),camera.rotation.order="YXZ";const textureCanvas=document.createElement("canvas");textureCanvas.height=boxHeight,textureCanvas.width=boxWidth;const textureContext=textureCanvas.getContext("2d"),texture=new THREE.Texture(sobel.video),boxGeometry=new THREE.BoxGeometry(boxWidth,boxHeight,1),boxMaterial=new THREE.ShaderMaterial({uniforms:{texture:{type:"t",value:texture},width:{type:"f",value:sobel.width},height:{type:"f",value:sobel.height}},vertexShader:vertexShaderSource.text,fragmentShader:fragmentShaderSource.text}),box=new THREE.Mesh(boxGeometry,boxMaterial);box.rotation.order="YXZ",scene.add(box),texture.minFilter=THREE.NearestFilter;const render=()=>{requestAnimationFrame(render),textureContext.drawImage(sobel.video,0,0,sobel.video.width,sobel.video.height),texture.needsUpdate=!0,effect.render(scene,camera)};render(),window.location.href.includes("localhost")||renderer.domElement.addEventListener("click",()=>{(new NoSleep).enable(),document.fullscreenEnabled&&renderer.domElement.requestFullScreen()||document.webkitFullscreenEnabled&&renderer.domElement.webkitRequestFullScreen()||document.mozFullScreenEnabled&&renderer.domElement.mozRequestFullScreen()||document.msFullScreenEnabled&&renderer.domElement.msRequestFullScreen()}),window.addEventListener("resize",()=>{effect.setSize(window.innerWidth,window.innerHeight),camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix()})})});